/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsInt,
  Min,
  Max,
  ValidateNested,
} from "class-validator";
import { FlashcardCreateNestedManyWithoutPdfsInput } from "./FlashcardCreateNestedManyWithoutPdfsInput";
import { Type } from "class-transformer";
import { MindMapCreateNestedManyWithoutPdfsInput } from "./MindMapCreateNestedManyWithoutPdfsInput";
import { QuestionCreateNestedManyWithoutPdfsInput } from "./QuestionCreateNestedManyWithoutPdfsInput";
import { SummaryCreateNestedManyWithoutPdfsInput } from "./SummaryCreateNestedManyWithoutPdfsInput";

@InputType()
class PdfCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fileName?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  fileSize?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fileUrl?: string | null;

  @ApiProperty({
    required: false,
    type: () => FlashcardCreateNestedManyWithoutPdfsInput,
  })
  @ValidateNested()
  @Type(() => FlashcardCreateNestedManyWithoutPdfsInput)
  @IsOptional()
  @Field(() => FlashcardCreateNestedManyWithoutPdfsInput, {
    nullable: true,
  })
  flashcards?: FlashcardCreateNestedManyWithoutPdfsInput;

  @ApiProperty({
    required: false,
    type: () => MindMapCreateNestedManyWithoutPdfsInput,
  })
  @ValidateNested()
  @Type(() => MindMapCreateNestedManyWithoutPdfsInput)
  @IsOptional()
  @Field(() => MindMapCreateNestedManyWithoutPdfsInput, {
    nullable: true,
  })
  mindMaps?: MindMapCreateNestedManyWithoutPdfsInput;

  @ApiProperty({
    required: false,
    type: () => QuestionCreateNestedManyWithoutPdfsInput,
  })
  @ValidateNested()
  @Type(() => QuestionCreateNestedManyWithoutPdfsInput)
  @IsOptional()
  @Field(() => QuestionCreateNestedManyWithoutPdfsInput, {
    nullable: true,
  })
  questions?: QuestionCreateNestedManyWithoutPdfsInput;

  @ApiProperty({
    required: false,
    type: () => SummaryCreateNestedManyWithoutPdfsInput,
  })
  @ValidateNested()
  @Type(() => SummaryCreateNestedManyWithoutPdfsInput)
  @IsOptional()
  @Field(() => SummaryCreateNestedManyWithoutPdfsInput, {
    nullable: true,
  })
  summaries?: SummaryCreateNestedManyWithoutPdfsInput;
}

export { PdfCreateInput as PdfCreateInput };
